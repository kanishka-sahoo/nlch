name: Build and Release Binaries

on:
  release:
    types: [created]
  pull_request:
    branches:
      - main  # or your default branch name
  workflow_dispatch:

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64 # Go does not support windows/arm64 well for CLI
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binary
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/nlch-${{ matrix.goos }}-${{ matrix.goarch }}$EXT .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nlch-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/nlch-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    name: Attach binaries to release
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'release' ||
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'v'))
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List artifacts
        run: ls -R dist

      - name: Upload binaries to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/nlch-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries as PR artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: pr-binaries
          path: dist/**/nlch-*
